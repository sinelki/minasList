{
  "name": "express-stormpath",
  "version": "2.3.4",
  "description": "Build simple, secure web applications with Stormpath and Express!",
  "keywords": [
    "express",
    "stormpath",
    "authentication",
    "api",
    "service",
    "users",
    "accounts"
  ],
  "scripts": {
    "docs": "cd docs && rm -rf _build/html && make html && jsdoc -d ./apidocs/ -P ./package.json -r .",
    "lint": "./node_modules/eslint/bin/eslint.js -c .eslintrc lib/** test/** --ignore-pattern **/*.yml --quiet",
    "test": "npm run lint && istanbul cover ./node_modules/mocha/bin/_mocha --check-leaks --report html -- --reporter spec --recursive --growl --no-timeouts",
    "test-travis": "npm run lint && istanbul cover ./node_modules/mocha/bin/_mocha --check-leaks --report lcovonly -- --reporter spec --recursive --no-timeouts"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/stormpath/express-stormpath"
  },
  "author": {
    "name": "Stormpath, Inc."
  },
  "license": "Apache-2.0",
  "main": "./index",
  "dependencies": {
    "async": "^1.4.2",
    "body-parser": "^1.10.0",
    "cookie-parser": "^1.3.5",
    "cookies": "^0.5.0",
    "deep-extend": "^0.4.0",
    "express": "^4.10.6",
    "forms": "^1.1.4",
    "jade": "^1.11.0",
    "lodash": "^3.10.1",
    "njwt": "^0.2.3",
    "parse-iso-duration": "^1.0.0",
    "request": "^2.63.0",
    "stormpath": "^0.15.2",
    "stormpath-config": "0.0.16",
    "utils-merge": "^1.0.0",
    "uuid": "^2.0.1",
    "winston": "^2.1.1"
  },
  "devDependencies": {
    "cheerio": "^0.19.0",
    "coveralls": "^2.11.2",
    "eslint": "^1.6.0",
    "istanbul": "^0.4.0",
    "js-yaml": "^3.4.3",
    "mocha": "^2.1.0",
    "mocha-lcov-reporter": "^1.0.0",
    "supertest": "^1.1.0"
  },
  "readme": "# Express-Stormpath\n\n[![NPM Version](https://img.shields.io/npm/v/express-stormpath.svg?style=flat)](https://npmjs.org/package/express-stormpath)\n[![NPM Downloads](http://img.shields.io/npm/dm/express-stormpath.svg?style=flat)](https://npmjs.org/package/express-stormpath)\n[![Build Status](https://img.shields.io/travis/stormpath/express-stormpath.svg?style=flat)](https://travis-ci.org/stormpath/express-stormpath)\n[![Coverage Status](https://coveralls.io/repos/stormpath/express-stormpath/badge.svg?branch=master)](https://coveralls.io/r/stormpath/express-stormpath?branch=master)\n\nExpress-Stormpath is an extension for [Express.js](http://expressjs.com/) that makes it incredibly simple to add user authentication to your application, such as login, signup, authorization, and social login.\n\n*[Stormpath](https://stormpath.com/) is a User Management API that reduces development time with instant-on, scalable user infrastructure. Stormpath's intuitive API and expert support make it easy for developers to authenticate, manage and secure users and roles in any application.*\n\n* [Getting Started](#getting-started)\n* [Documentation](#documentation)\n* [Example](#example)\n* [Help](#help)\n* [Links](#links)\n* [License](#license)\n\n## Getting Started\n\nFollow these steps to add Stormpath user authentication to your Express.js app.\n\n1. **Download Your Key File**\n\n  [Download your key file](https://support.stormpath.com/hc/en-us/articles/203697276-Where-do-I-find-my-API-key-) from the Stormpath Console.\n\n2. **Store Your Key As Environment Variables**\n\n  Open your key file and grab the **API Key ID** and **API Key Secret**, then run these commands to save them as environment variables:\n\n  ```bash\n  $ export STORMPATH_CLIENT_APIKEY_ID=<YOUR-ID-HERE>\n  $ export STORMPATH_CLIENT_APIKEY_SECRET=<YOUR-SECRET-HERE>\n  ```\n\n  *On Windows, use the `set` or `setx` command instead of `export`.*\n\n3. **Get Your Stormpath App HREF**\n\n  Login to the [Stormpath Console](https://api.stormpath.com/) and grab the *HREF* (called **REST URL** in the UI) of your *Application*. It should look something like this:\n\n  `https://api.stormpath.com/v1/applications/q42unYAj6PDLxth9xKXdL`\n\n4. **Store Your Stormpath App HREF In an Environment Variable**\n\n  ```bash\n  $ export STORMPATH_APPLICATION_HREF=<YOUR-STORMPATH-APP-HREF>\n  ```\n\n  *On Windows, use the `set` or `setx` command instead of `export`.*\n\n5. **Install The SDK**\n\n  ```bash\n  $ npm install --save express-stormpath\n  ```\n\n6. **Include It In Your App**\n\n  ```javascript\n  var stormpath = require('express-stormpath');\n  ```\n\n7. **Initialize It**\n\n  You need to initialize the middlware and use it with your application.  We have\n  options for various use cases.\n\n  **If your app is a traditional website:**\n\n  Set `website` to `true`. This will setup default views for login, registration, etc.\n\n  ```javascript\n  app.use(stormpath.init(app, {\n    website: true\n  }));\n  ```\n\n  **If your app is a single page application (Angular, React)**\n\n  You will need to tell our library where the root file is.  For example, if\n  your Angular app is in the `client/` folder in your project:\n\n  ```javascript\n  app.use(stormpath.init(app, {\n    website: true,\n    web: {\n      spaRoot: path.join(__dirname, 'client', 'index.html')\n    }\n  }));\n  ```\n\n  *[Read more about the initialization in the documentation →][]*\n\n8. **Wait For The SDK**\n\n  Wait for the SDK to get ready, then start the web server:\n\n  ```javascript\n  app.on('stormpath.ready', function () {\n    app.listen(3000, function () {\n      //...\n    });\n  });\n  ```\n\n9. **Protect Your Routes**\n\n  For websites and Single-Page Apps, use `stormpath.loginRequired` as a\n  middleware to protect your routes:\n\n  ```javascript\n  app.get('/secret', stormpath.loginRequired, function (req, res) {\n    //...\n  });\n  ```\n\n  For API services that use HTTP Basic Auth or OAuth2, use\n  `stormpath.apiAuthenticationRequired`:\n\n  ```javascript\n  app.get('/secret', stormpath.apiAuthenticationRequired, function (req, res) {\n    //...\n  });\n  ```\n\n  If the user tries to access this route without being logged in, they will be redirected to the login page.\n\n10. **Login**\n\n  To access a protected route, the user must first login.\n\n  **Traditional Websites:**\n\n  You can login by visiting the `/login` URL and submitting the login form.\n\n  **Single Page Apps:**\n\n  Your front-end client should POST this data to the `/login` endpoint:\n\n  ```javascript\n  {\n    \"username\": \"foo@bar.com\",\n    \"password\": \"myPassword\"\n  }\n  ```\n\n  *Note: make sure that your client is setting the `Accept: application/json`\n  header on the request.*\n\n  *Using AngularJS?  Try our [Stormpath Angular SDK][]*\n\n  **API Services**\n\n  If your app is an API service that uses our client_credentials workflow, your API consumers\n  can obtain access tokens by making this POST to your server:\n\n  ```\n  POST /oauth/token\n  Authorization: Basic <Base64Endoded(ACCOUNT_API_KEY_ID:ACCOUNT_API_KEY_SECRET)>;\n  Content-Type: application/x-www-form-urlencoded\n\n  grant_type=client_credentials\n  ```\n\n  *[Read more about login in the documentation →][]*\n\n11. **Register**\n\n  To be able to login, your users first need an account.\n\n  **Traditional Websites:**\n\n  Users can register by visiting the `/register` URL and submitting the\n  registration form.\n\n  **Single Page Applications:**\n\n  Your front-end client should POST this data to the `/register` endpoint:\n\n  ```javascript\n  {\n    \"email\": \"foo@bar.com\",\n    \"password\": \"mySuper3ecretPAssw0rd\"\n  }\n  ```\n\n  If the user was created successfully, you will receive a 200 response and the\n  body will contain the account that was created. If an error occurred, we will\n  send a 400 status with an error message in the body.\n\n  *Note: make sure that your client is setting the `Accept: application/json`\n  header on the request.*\n\n  *Using AngularJS?  Try our [Stormpath Angular SDK][]*\n\n  *[Read more about registration in the documentation →][]*\n\n12. **That's It!**\n\n  You just added user authentication to your app with Stormpath. See the [documentation][] for further information on how Stormpath can be used with your Express.js app.\n\n## Documentation\n\nFor a full documentation of this library, see the [documentation][].\n\n## Help\n\nContact us via email at support@stormpath.com or visit our [support center][].\n\n## Example\n\nFor an example app, see the [Stormpath SPA Development Server](https://github.com/stormpath/stormpath-spa-dev-server).\n\n## Links\n\nBelow are some resources you might find useful.\n\n* [15-Minute Tutorial: A Simple Web App With Node.js, Express, Bootstrap & Stormpath](https://stormpath.com/blog/build-nodejs-express-stormpath-app/)\n* [Stormpath Node.js SDK](https://github.com/stormpath/stormpath-sdk-node)\n\n## License\n\nApache 2.0, see [LICENSE](LICENSE).\n\n[documentation]: https://docs.stormpath.com/nodejs/express/\n[Read more about login in the documentation →]: https://docs.stormpath.com/nodejs/express/latest/login.html\n[Read more about registration in the documentation →]: https://docs.stormpath.com/nodejs/express/latest/registration.html\n[Read more about the initialization in the documentation →]: https://docs.stormpath.com/nodejs/express/latest/configuration.html#initialize-express-stormpath\n[Stormpath Angular SDK]: https://github.com/stormpath/stormpath-sdk-angularjs\n[support center]: https://support.stormpath.com",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/stormpath/express-stormpath/issues"
  },
  "_id": "express-stormpath@2.3.4",
  "dist": {
    "shasum": "9e4cce742fb8c498f5cb1d24d95e359c917fef3b"
  },
  "_from": "express-stormpath@",
  "_resolved": "https://registry.npmjs.org/express-stormpath/-/express-stormpath-2.3.4.tgz"
}
